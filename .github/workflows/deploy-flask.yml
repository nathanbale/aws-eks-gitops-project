name: Build and Deploy Flask App to EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        IMAGE=${{ secrets.DOCKER_USERNAME }}/flask-eks-app:latest
        docker build -t $IMAGE .
        docker push $IMAGE

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --name devops-eks-cluster --region us-east-1

    - name: Deploy to EKS
      run: |
        cat <<EOF | kubectl apply -f -
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: flask-app
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: flask-app
          template:
            metadata:
              labels:
                app: flask-app
            spec:
              containers:
              - name: flask-app
                image: ${{ secrets.DOCKER_USERNAME }}/flask-eks-app:latest
                ports:
                - containerPort: 80

      - name: Force rollout restart
        run: |
          aws eks update-kubeconfig --name devops-eks-cluster --region us-east-1
          kubectl rollout restart deployment flask-app

        ---
        apiVersion: v1
        kind: Service
        metadata:
          name: flask-service
        spec:
          type: LoadBalancer
          selector:
            app: flask-app
          ports:
          - port: 80
            targetPort: 80
        EOF
